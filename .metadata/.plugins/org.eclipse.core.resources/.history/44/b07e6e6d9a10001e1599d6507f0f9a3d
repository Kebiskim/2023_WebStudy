<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>form 태그</title>
</head>
<body>
<!-- 
	form : 사용자에게 정보를 입력받아 원하는 페이지(서버)에게 
		   정보를 보낸다.
	<form [action=""] [method=""] [enctype=""]>
		form elements(폼 요소들)
	</form>
	1. action="정보가 전달되는 페이지경로(서버경로)"
	2. method = "정보를 전달하는 방법"
		- get(생략) : 정보를 head에 담아서 보낸다.
					 적은용량만 가능, 주소창에 내용이 보인다.
					 보안에 취약, 속도는 빠르다. ex) 검색
		- post : 정보를 body에 담아서 보낸다.
				 많은용량 가능, 주소창에 내용이 보이지 않는다.
				 상대적으로 보안적이다.
	3. enctype : 파일 업로드할 때만 사용 (평소에는 생략)
	
	4. form elements (폼 요소들) : input, label, select, textarea, datalist,
								fieldset, legend
		- input 태그의 속성들 : text, button, radio, checkbox, file, hidden
							number, password, reset, submit,
							tel, color, date, email, time, url, week,
							range, search...
		input type 속성 중 name 속성은 데이터가 전달될 때 사용되는 name임
		input type 속성 중 value속성은 데이터가 전달될 때 사용되는 값이다.
		** 데이터 전달될 때 ?name=value&name=value&name=vaule&... 식으로 전달된다.
		** 같은 이름에 value가 여러개인 경우도 같다. (단, 서버는 배열로 받아서 사용한다.)
		** radio나 checkbox의 속성 중 checked는 선택 표시가 되었다는 뜻
		** select : selected 속성을 지정하면 선택되었다는 뜻
					option 태그와 함께 사용
					size 속성은 화면에 표시되는 option 개수
					multiple 속성을 지정하면 여러개 동시에 선택가능(ctrl)
		** reset 속성은 form 태그안에 입력한 기존 정보를 삭제 (버튼형태)
		** submit 속성은 form 정보를 action이 지정한 페이지에 전달하는 역할 (버튼형태)
		--------------------------------------------------------------
		** disabled : 커서가 들어가지 않아서 입력할 수 없다.
		** readonly : 오직 읽기만 가능, 수정 안됨
		** placeholder : 입력필드(input type="text")에 힌트표시
		** pattern : [0-9(숫자만)] {3(자릿수)} [A-Za-z(대소문자)]
					ex) 전화번호 : [0-9]{3}-[0-9]{4}-[0-9]{4}
		** required : 반드시 입력해야 하는 태그에 붙이는 속성 (회원가입할 때 필수사항 등)
		** javascript 전까지는 submit 속성을 이용해서 데이터 전달
		** javascript 에서는 input type=button 속성에 onclick을 이용해서 데이터 전달할수 있다.
			(태그 속성 중 onXXXXX는 자바스크립트의 함수를 호출할 수 있다.)
 -->
 	<form action="" method="get">
 		<p>아이디 : <input type="text" name="id"></p>
 	</form>
</body>
</html>